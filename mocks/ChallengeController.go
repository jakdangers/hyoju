// Code generated by mockery v2.32.0. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// ChallengeController is an autogenerated mock type for the ChallengeController type
type ChallengeController struct {
	mock.Mock
}

type ChallengeController_Expecter struct {
	mock *mock.Mock
}

func (_m *ChallengeController) EXPECT() *ChallengeController_Expecter {
	return &ChallengeController_Expecter{mock: &_m.Mock}
}

// CreateChallenge provides a mock function with given fields: c
func (_m *ChallengeController) CreateChallenge(c *gin.Context) {
	_m.Called(c)
}

// ChallengeController_CreateChallenge_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateChallenge'
type ChallengeController_CreateChallenge_Call struct {
	*mock.Call
}

// CreateChallenge is a helper method to define mock.On call
//   - c *gin.Context
func (_e *ChallengeController_Expecter) CreateChallenge(c interface{}) *ChallengeController_CreateChallenge_Call {
	return &ChallengeController_CreateChallenge_Call{Call: _e.mock.On("CreateChallenge", c)}
}

func (_c *ChallengeController_CreateChallenge_Call) Run(run func(c *gin.Context)) *ChallengeController_CreateChallenge_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *ChallengeController_CreateChallenge_Call) Return() *ChallengeController_CreateChallenge_Call {
	_c.Call.Return()
	return _c
}

func (_c *ChallengeController_CreateChallenge_Call) RunAndReturn(run func(*gin.Context)) *ChallengeController_CreateChallenge_Call {
	_c.Call.Return(run)
	return _c
}

// NewChallengeController creates a new instance of ChallengeController. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewChallengeController(t interface {
	mock.TestingT
	Cleanup(func())
}) *ChallengeController {
	mock := &ChallengeController{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

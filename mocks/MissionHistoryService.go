// Code generated by mockery v2.32.0. DO NOT EDIT.

package mocks

import (
	context "context"
	entity "pixelix/entity"

	mock "github.com/stretchr/testify/mock"
)

// MissionHistoryService is an autogenerated mock type for the MissionHistoryService type
type MissionHistoryService struct {
	mock.Mock
}

type MissionHistoryService_Expecter struct {
	mock *mock.Mock
}

func (_m *MissionHistoryService) EXPECT() *MissionHistoryService_Expecter {
	return &MissionHistoryService_Expecter{mock: &_m.Mock}
}

// CreateMissionHistory provides a mock function with given fields: ctx, req
func (_m *MissionHistoryService) CreateMissionHistory(ctx context.Context, req entity.CreateMissionHistoryRequest) (*entity.CreateMissionHistoryResponse, error) {
	ret := _m.Called(ctx, req)

	var r0 *entity.CreateMissionHistoryResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, entity.CreateMissionHistoryRequest) (*entity.CreateMissionHistoryResponse, error)); ok {
		return rf(ctx, req)
	}
	if rf, ok := ret.Get(0).(func(context.Context, entity.CreateMissionHistoryRequest) *entity.CreateMissionHistoryResponse); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.CreateMissionHistoryResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, entity.CreateMissionHistoryRequest) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MissionHistoryService_CreateMissionHistory_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateMissionHistory'
type MissionHistoryService_CreateMissionHistory_Call struct {
	*mock.Call
}

// CreateMissionHistory is a helper method to define mock.On call
//   - ctx context.Context
//   - req entity.CreateMissionHistoryRequest
func (_e *MissionHistoryService_Expecter) CreateMissionHistory(ctx interface{}, req interface{}) *MissionHistoryService_CreateMissionHistory_Call {
	return &MissionHistoryService_CreateMissionHistory_Call{Call: _e.mock.On("CreateMissionHistory", ctx, req)}
}

func (_c *MissionHistoryService_CreateMissionHistory_Call) Run(run func(ctx context.Context, req entity.CreateMissionHistoryRequest)) *MissionHistoryService_CreateMissionHistory_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(entity.CreateMissionHistoryRequest))
	})
	return _c
}

func (_c *MissionHistoryService_CreateMissionHistory_Call) Return(_a0 *entity.CreateMissionHistoryResponse, _a1 error) *MissionHistoryService_CreateMissionHistory_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MissionHistoryService_CreateMissionHistory_Call) RunAndReturn(run func(context.Context, entity.CreateMissionHistoryRequest) (*entity.CreateMissionHistoryResponse, error)) *MissionHistoryService_CreateMissionHistory_Call {
	_c.Call.Return(run)
	return _c
}

// NewMissionHistoryService creates a new instance of MissionHistoryService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMissionHistoryService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MissionHistoryService {
	mock := &MissionHistoryService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

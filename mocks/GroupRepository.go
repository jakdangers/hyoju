// Code generated by mockery v2.32.0. DO NOT EDIT.

package mocks

import (
	context "context"
	entity "pixelix/entity"

	mock "github.com/stretchr/testify/mock"
)

// GroupRepository is an autogenerated mock type for the GroupRepository type
type GroupRepository struct {
	mock.Mock
}

type GroupRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *GroupRepository) EXPECT() *GroupRepository_Expecter {
	return &GroupRepository_Expecter{mock: &_m.Mock}
}

// CreateGroup provides a mock function with given fields: c, group
func (_m *GroupRepository) CreateGroup(c context.Context, group *entity.Group) (*entity.Group, error) {
	ret := _m.Called(c, group)

	var r0 *entity.Group
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *entity.Group) (*entity.Group, error)); ok {
		return rf(c, group)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *entity.Group) *entity.Group); ok {
		r0 = rf(c, group)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.Group)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *entity.Group) error); ok {
		r1 = rf(c, group)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GroupRepository_CreateGroup_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateGroup'
type GroupRepository_CreateGroup_Call struct {
	*mock.Call
}

// CreateGroup is a helper method to define mock.On call
//   - c context.Context
//   - group *entity.Group
func (_e *GroupRepository_Expecter) CreateGroup(c interface{}, group interface{}) *GroupRepository_CreateGroup_Call {
	return &GroupRepository_CreateGroup_Call{Call: _e.mock.On("CreateGroup", c, group)}
}

func (_c *GroupRepository_CreateGroup_Call) Run(run func(c context.Context, group *entity.Group)) *GroupRepository_CreateGroup_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*entity.Group))
	})
	return _c
}

func (_c *GroupRepository_CreateGroup_Call) Return(_a0 *entity.Group, _a1 error) *GroupRepository_CreateGroup_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *GroupRepository_CreateGroup_Call) RunAndReturn(run func(context.Context, *entity.Group) (*entity.Group, error)) *GroupRepository_CreateGroup_Call {
	_c.Call.Return(run)
	return _c
}

// NewGroupRepository creates a new instance of GroupRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGroupRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *GroupRepository {
	mock := &GroupRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
